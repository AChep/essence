import java.text.SimpleDateFormat

apply plugin: 'com.android.library'

apply plugin: 'kotlin-platform-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: 'kotlinx-serialization'

android {
    compileSdkVersion sdk_target
    defaultConfig {
        minSdkVersion sdk_min
        targetSdkVersion sdk_target
        versionCode version_code
        versionName version_name
    }

    Date date = Calendar.getInstance().getTime()
    String time = new SimpleDateFormat("EEE MMMM dd HH:mm:ss zzz yyyy", Locale.ENGLISH).format(date)
    String timeYear = new SimpleDateFormat("yyyy", Locale.ENGLISH).format(date)

    buildTypes {
        release {
        }
    }

    // Add config fields to each of build types.
    buildTypes.each {
        it.buildConfigField "String", "MY_TIME", "\"" + time + "\""
        it.buildConfigField "String", "MY_TIME_YEAR", "\"" + timeYear + "\""

        // api keys
        it.buildConfigField "String", "API_OPEN_WEATHER_MAP", "\"${System.env.API_OPEN_WEATHER_MAP}\""
        it.buildConfigField "String", "API_ACCU_WEATHER", "\"${System.env.API_ACCU_WEATHER}\""
        it.buildConfigField "String", "API_DARK_SKY", "\"${System.env.API_DARK_SKY}\""
        it.buildConfigField "String", "API_WEATHER_STACK", "\"${System.env.API_WEATHER_STACK}\""
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

androidExtensions {
    experimental = true
}

dependencies {
    api "com.artemchep.config:config:$config_version"

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.14.0"

    implementation "io.arrow-kt:arrow-core-data:$arrow_version"
    implementation "io.arrow-kt:arrow-core-extensions:$arrow_version"
    implementation "io.arrow-kt:arrow-syntax:$arrow_version"
    implementation "io.arrow-kt:arrow-typeclasses:$arrow_version"
    implementation "io.arrow-kt:arrow-extras-data:$arrow_version"
    implementation "io.arrow-kt:arrow-extras-extensions:$arrow_version"
    implementation "io.arrow-kt:arrow-optics:$arrow_version"
    kapt "io.arrow-kt:arrow-meta:$arrow_version"

    implementation "androidx.core:core-ktx:$ktx_lib_version"
    implementation "androidx.appcompat:appcompat:$appcompat_lib_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout_lib_version"
    api "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation 'com.github.pwittchen:weathericonview:1.1.0'
    implementation 'com.github.iamBedant:OutlineTextView:1.0.5'
    implementation "com.github.kittinunf.fuel:fuel:$fuel_version"
    implementation "com.github.kittinunf.fuel:fuel-coroutines:$fuel_version"
    implementation "com.github.kittinunf.fuel:fuel-kotlinx-serialization:$fuel_version"

    implementation 'com.google.android.gms:play-services-location:17.0.0'
    implementation "com.google.android.material:material:$material_version"

    implementation "com.google.android.support:wearable:$wearable_version"
    implementation "com.google.android.gms:play-services-wearable:17.0.0"
    compileOnly "com.google.android.wearable:wearable:$wearable_version"
}
